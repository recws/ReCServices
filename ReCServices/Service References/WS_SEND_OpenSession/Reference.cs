//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReCServices.WS_SEND_OpenSession {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://astus.com/services/2010/11", ConfigurationName="WS_SEND_OpenSession.AuthorizationContract")]
    public interface AuthorizationContract {
        
        // CODEGEN: Se está generando un contrato de mensaje, ya que el espacio de nombres de partes de mensaje (http://astus.com/service/2010/11) no coincide con el valor predeterminado (http://astus.com/services/2010/11).
        [System.ServiceModel.OperationContractAttribute(Action="http://astus.com/service/2010/11/AuthorizationContract/IsTokenValid", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageBase))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="IsTokenValidResponse")]
        ReCServices.WS_SEND_OpenSession.IsTokenValidResponse1 IsTokenValid(ReCServices.WS_SEND_OpenSession.IsTokenValidRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://astus.com/service/2010/11/AuthorizationContract/IsTokenValid", ReplyAction="*")]
        System.Threading.Tasks.Task<ReCServices.WS_SEND_OpenSession.IsTokenValidResponse1> IsTokenValidAsync(ReCServices.WS_SEND_OpenSession.IsTokenValidRequest request);
        
        // CODEGEN: Se está generando un contrato de mensaje, ya que el espacio de nombres de partes de mensaje (http://astus.com/service/2010/11) no coincide con el valor predeterminado (http://astus.com/services/2010/11).
        [System.ServiceModel.OperationContractAttribute(Action="http://astus.com/service/2010/11/AuthorizationContract/OpenSession", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageBase))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="OpenSessionResponse")]
        ReCServices.WS_SEND_OpenSession.OpenSessionResponse1 OpenSession(ReCServices.WS_SEND_OpenSession.OpenSessionRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://astus.com/service/2010/11/AuthorizationContract/OpenSession", ReplyAction="*")]
        System.Threading.Tasks.Task<ReCServices.WS_SEND_OpenSession.OpenSessionResponse1> OpenSessionAsync(ReCServices.WS_SEND_OpenSession.OpenSessionRequest1 request);
        
        // CODEGEN: Se está generando un contrato de mensaje, ya que el espacio de nombres de partes de mensaje (http://astus.com/service/2010/11) no coincide con el valor predeterminado (http://astus.com/services/2010/11).
        [System.ServiceModel.OperationContractAttribute(Action="http://astus.com/service/2010/11/AuthorizationContract/CloseSession", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MessageBase))]
        ReCServices.WS_SEND_OpenSession.CloseSessionResponse CloseSession(ReCServices.WS_SEND_OpenSession.CloseSessionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://astus.com/service/2010/11/AuthorizationContract/CloseSession", ReplyAction="*")]
        System.Threading.Tasks.Task<ReCServices.WS_SEND_OpenSession.CloseSessionResponse> CloseSessionAsync(ReCServices.WS_SEND_OpenSession.CloseSessionRequest request);
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://astus.com/service/2010/11")]
    public partial class AuthenticatedRequest : MessageBase {
        
        private Token unsafeTokenField;
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Token UnsafeToken {
            get {
                return this.unsafeTokenField;
            }
            set {
                this.unsafeTokenField = value;
                this.RaisePropertyChanged("UnsafeToken");
            }
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://astus.com/service/2010/11")]
    public partial class Token : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string valueField;
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <comentarios/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OpenSessionResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OpenSessionRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IsTokenValidResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuthenticatedRequest))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://astus.com/service/2010/11")]
    public abstract partial class MessageBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://astus.com/service/2010/11")]
    public partial class OpenSessionResponse : MessageBase {
        
        private bool isAuthenticatedField;
        
        private Token tokenField;
        
        private int fleetOwnerIDField;
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool IsAuthenticated {
            get {
                return this.isAuthenticatedField;
            }
            set {
                this.isAuthenticatedField = value;
                this.RaisePropertyChanged("IsAuthenticated");
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public Token Token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
                this.RaisePropertyChanged("Token");
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int FleetOwnerID {
            get {
                return this.fleetOwnerIDField;
            }
            set {
                this.fleetOwnerIDField = value;
                this.RaisePropertyChanged("FleetOwnerID");
            }
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://astus.com/service/2010/11")]
    public partial class OpenSessionRequest : MessageBase {
        
        private string usernameField;
        
        private string passwordField;
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("Username");
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://astus.com/service/2010/11")]
    public partial class IsTokenValidResponse : MessageBase {
        
        private bool isValidField;
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool IsValid {
            get {
                return this.isValidField;
            }
            set {
                this.isValidField = value;
                this.RaisePropertyChanged("IsValid");
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsTokenValid", WrapperNamespace="http://astus.com/services/2010/11", IsWrapped=true)]
    public partial class IsTokenValidRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://astus.com/service/2010/11", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://astus.com/service/2010/11", IsNullable=true)]
        public ReCServices.WS_SEND_OpenSession.AuthenticatedRequest AuthenticatedRequest;
        
        public IsTokenValidRequest() {
        }
        
        public IsTokenValidRequest(ReCServices.WS_SEND_OpenSession.AuthenticatedRequest AuthenticatedRequest) {
            this.AuthenticatedRequest = AuthenticatedRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsTokenValidResponse", WrapperNamespace="http://astus.com/services/2010/11", IsWrapped=true)]
    public partial class IsTokenValidResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://astus.com/service/2010/11", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://astus.com/service/2010/11")]
        public ReCServices.WS_SEND_OpenSession.IsTokenValidResponse IsTokenValidResponse;
        
        public IsTokenValidResponse1() {
        }
        
        public IsTokenValidResponse1(ReCServices.WS_SEND_OpenSession.IsTokenValidResponse IsTokenValidResponse) {
            this.IsTokenValidResponse = IsTokenValidResponse;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OpenSession", WrapperNamespace="http://astus.com/services/2010/11", IsWrapped=true)]
    public partial class OpenSessionRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://astus.com/service/2010/11", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://astus.com/service/2010/11")]
        public ReCServices.WS_SEND_OpenSession.OpenSessionRequest OpenSessionRequest;
        
        public OpenSessionRequest1() {
        }
        
        public OpenSessionRequest1(ReCServices.WS_SEND_OpenSession.OpenSessionRequest OpenSessionRequest) {
            this.OpenSessionRequest = OpenSessionRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OpenSessionResponse", WrapperNamespace="http://astus.com/services/2010/11", IsWrapped=true)]
    public partial class OpenSessionResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://astus.com/service/2010/11", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://astus.com/service/2010/11")]
        public ReCServices.WS_SEND_OpenSession.OpenSessionResponse OpenSessionResponse;
        
        public OpenSessionResponse1() {
        }
        
        public OpenSessionResponse1(ReCServices.WS_SEND_OpenSession.OpenSessionResponse OpenSessionResponse) {
            this.OpenSessionResponse = OpenSessionResponse;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CloseSession", WrapperNamespace="http://astus.com/services/2010/11", IsWrapped=true)]
    public partial class CloseSessionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://astus.com/service/2010/11", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://astus.com/service/2010/11", IsNullable=true)]
        public ReCServices.WS_SEND_OpenSession.AuthenticatedRequest AuthenticatedRequest;
        
        public CloseSessionRequest() {
        }
        
        public CloseSessionRequest(ReCServices.WS_SEND_OpenSession.AuthenticatedRequest AuthenticatedRequest) {
            this.AuthenticatedRequest = AuthenticatedRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CloseSessionResponse", WrapperNamespace="http://astus.com/services/2010/11", IsWrapped=true)]
    public partial class CloseSessionResponse {
        
        public CloseSessionResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AuthorizationContractChannel : ReCServices.WS_SEND_OpenSession.AuthorizationContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthorizationContractClient : System.ServiceModel.ClientBase<ReCServices.WS_SEND_OpenSession.AuthorizationContract>, ReCServices.WS_SEND_OpenSession.AuthorizationContract {
        
        public AuthorizationContractClient() {
        }
        
        public AuthorizationContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthorizationContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthorizationContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthorizationContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReCServices.WS_SEND_OpenSession.IsTokenValidResponse1 ReCServices.WS_SEND_OpenSession.AuthorizationContract.IsTokenValid(ReCServices.WS_SEND_OpenSession.IsTokenValidRequest request) {
            return base.Channel.IsTokenValid(request);
        }
        
        public ReCServices.WS_SEND_OpenSession.IsTokenValidResponse IsTokenValid(ReCServices.WS_SEND_OpenSession.AuthenticatedRequest AuthenticatedRequest) {
            ReCServices.WS_SEND_OpenSession.IsTokenValidRequest inValue = new ReCServices.WS_SEND_OpenSession.IsTokenValidRequest();
            inValue.AuthenticatedRequest = AuthenticatedRequest;
            ReCServices.WS_SEND_OpenSession.IsTokenValidResponse1 retVal = ((ReCServices.WS_SEND_OpenSession.AuthorizationContract)(this)).IsTokenValid(inValue);
            return retVal.IsTokenValidResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReCServices.WS_SEND_OpenSession.IsTokenValidResponse1> ReCServices.WS_SEND_OpenSession.AuthorizationContract.IsTokenValidAsync(ReCServices.WS_SEND_OpenSession.IsTokenValidRequest request) {
            return base.Channel.IsTokenValidAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReCServices.WS_SEND_OpenSession.IsTokenValidResponse1> IsTokenValidAsync(ReCServices.WS_SEND_OpenSession.AuthenticatedRequest AuthenticatedRequest) {
            ReCServices.WS_SEND_OpenSession.IsTokenValidRequest inValue = new ReCServices.WS_SEND_OpenSession.IsTokenValidRequest();
            inValue.AuthenticatedRequest = AuthenticatedRequest;
            return ((ReCServices.WS_SEND_OpenSession.AuthorizationContract)(this)).IsTokenValidAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReCServices.WS_SEND_OpenSession.OpenSessionResponse1 ReCServices.WS_SEND_OpenSession.AuthorizationContract.OpenSession(ReCServices.WS_SEND_OpenSession.OpenSessionRequest1 request) {
            return base.Channel.OpenSession(request);
        }
        
        public ReCServices.WS_SEND_OpenSession.OpenSessionResponse OpenSession(ReCServices.WS_SEND_OpenSession.OpenSessionRequest OpenSessionRequest) {
            ReCServices.WS_SEND_OpenSession.OpenSessionRequest1 inValue = new ReCServices.WS_SEND_OpenSession.OpenSessionRequest1();
            inValue.OpenSessionRequest = OpenSessionRequest;
            ReCServices.WS_SEND_OpenSession.OpenSessionResponse1 retVal = ((ReCServices.WS_SEND_OpenSession.AuthorizationContract)(this)).OpenSession(inValue);
            return retVal.OpenSessionResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReCServices.WS_SEND_OpenSession.OpenSessionResponse1> ReCServices.WS_SEND_OpenSession.AuthorizationContract.OpenSessionAsync(ReCServices.WS_SEND_OpenSession.OpenSessionRequest1 request) {
            return base.Channel.OpenSessionAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReCServices.WS_SEND_OpenSession.OpenSessionResponse1> OpenSessionAsync(ReCServices.WS_SEND_OpenSession.OpenSessionRequest OpenSessionRequest) {
            ReCServices.WS_SEND_OpenSession.OpenSessionRequest1 inValue = new ReCServices.WS_SEND_OpenSession.OpenSessionRequest1();
            inValue.OpenSessionRequest = OpenSessionRequest;
            return ((ReCServices.WS_SEND_OpenSession.AuthorizationContract)(this)).OpenSessionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ReCServices.WS_SEND_OpenSession.CloseSessionResponse ReCServices.WS_SEND_OpenSession.AuthorizationContract.CloseSession(ReCServices.WS_SEND_OpenSession.CloseSessionRequest request) {
            return base.Channel.CloseSession(request);
        }
        
        public void CloseSession(ReCServices.WS_SEND_OpenSession.AuthenticatedRequest AuthenticatedRequest) {
            ReCServices.WS_SEND_OpenSession.CloseSessionRequest inValue = new ReCServices.WS_SEND_OpenSession.CloseSessionRequest();
            inValue.AuthenticatedRequest = AuthenticatedRequest;
            ReCServices.WS_SEND_OpenSession.CloseSessionResponse retVal = ((ReCServices.WS_SEND_OpenSession.AuthorizationContract)(this)).CloseSession(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ReCServices.WS_SEND_OpenSession.CloseSessionResponse> ReCServices.WS_SEND_OpenSession.AuthorizationContract.CloseSessionAsync(ReCServices.WS_SEND_OpenSession.CloseSessionRequest request) {
            return base.Channel.CloseSessionAsync(request);
        }
        
        public System.Threading.Tasks.Task<ReCServices.WS_SEND_OpenSession.CloseSessionResponse> CloseSessionAsync(ReCServices.WS_SEND_OpenSession.AuthenticatedRequest AuthenticatedRequest) {
            ReCServices.WS_SEND_OpenSession.CloseSessionRequest inValue = new ReCServices.WS_SEND_OpenSession.CloseSessionRequest();
            inValue.AuthenticatedRequest = AuthenticatedRequest;
            return ((ReCServices.WS_SEND_OpenSession.AuthorizationContract)(this)).CloseSessionAsync(inValue);
        }
    }
}
